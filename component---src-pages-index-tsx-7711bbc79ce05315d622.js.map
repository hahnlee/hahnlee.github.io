{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./src/components/Section/Section.styled.ts","webpack:///./src/components/Section/Section.tsx","webpack:///./src/components/Section/index.ts","webpack:///./src/components/Stacks/Stacks.styled.ts","webpack:///./src/components/Stacks/Stacks.tsx","webpack:///./src/components/Stacks/index.ts","webpack:///./src/pages/index.tsx","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["MDXRenderer","require","module","Section","styled","section","props","backgroundColor","Content","div","Title","h1","title","children","Color","White","Wrapper","ItemGroup","Item","Gray7","active","Stacks","items","useState","selected","setSelected","map","index","key","onClick","body","query","handshake","keyframes","Heading","Hand","span","Links","Link","a","Divider","Gray6","Career","Column","CareerTitle","CompanyName","b","Date","IndexPage","edges","data","allMdx","Page","href","Gray0","node","frontmatter","React","useMDXComponents","mdx","useMDXScope","scope","components","mdxComponents","mdxScope","End","fullScope","keys","Object","values","fn"],"mappings":"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","file":"component---src-pages-index-tsx-7711bbc79ce05315d622.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","import styled from 'styled-components'\n\nimport Color from '../../styles/colors'\n\ninterface SectionProps {\n  backgroundColor: Color\n}\n\nexport const Section = styled.section<SectionProps>`\n  padding: 40px 20px;\n  background-color: ${props => props.backgroundColor};\n`\n\nexport const Content = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n`\n\nexport const Title = styled.h1``\n","import React, { ReactNode, ReactElement } from 'react'\n\nimport Color from '../../styles/colors'\nimport * as Styled from './Section.styled'\n\ninterface SectionProps {\n  title?: string\n  children?: ReactNode\n  backgroundColor?: Color\n}\n\nfunction Section({\n  title,\n  children,\n  backgroundColor = Color.White,\n}: SectionProps): ReactElement {\n  return (\n    <Styled.Section backgroundColor={backgroundColor}>\n      <Styled.Content>\n        { title && (<Styled.Title>{ title }</Styled.Title>) }\n        { children }\n      </Styled.Content>\n    </Styled.Section>\n  )\n}\n\nexport default Section\n","import Section from './Section'\n\nexport default Section\n","import styled from 'styled-components'\n\nimport Color from '../../styles/colors'\n\nexport const Wrapper = styled.div`\n  display: flex;\n`\n\nexport const ItemGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nexport const Item = styled.div`\n  padding: 8px 16px 8px 0;\n  color: ${Color.Gray7};\n  font-weight: 400;\n  font-size: 16;\n  cursor: pointer;\n`\n\ninterface TitleProps {\n  active: boolean\n}\n\nexport const Title = styled.h1<TitleProps>`\n  margin: 0;\n  padding-left: 8px;\n  font-size: 20px;\n  font-weight: 500;\n  border-left: 4px solid ${props => props.active ? Color.Gray7 : Color.White};\n`\n\nexport const Content = styled.div`\n  flex: 1;\n`\n","import React, { ReactElement, useState } from 'react'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\n\nimport * as Styled from './Stacks.styled'\n\ninterface StackItem {\n  title: string\n  body: string\n}\n\ninterface StacksProps {\n  items: StackItem[]\n}\n\nfunction Stacks({ items }: StacksProps): ReactElement<any> {\n  const [selected, setSelected] = useState(0)\n\n  return (\n    <Styled.Wrapper>\n      <Styled.ItemGroup>\n        { items.map(({ title }, index) => (\n          <Styled.Item\n            key={title}\n            onClick={() => setSelected(index)}\n          >\n            <Styled.Title\n              active={selected === index}\n            >\n              { title }\n            </Styled.Title>\n          </Styled.Item>\n        )) }\n      </Styled.ItemGroup>\n      <Styled.Content>\n        <MDXRenderer>\n          { items[selected].body }\n        </MDXRenderer>\n      </Styled.Content>\n    </Styled.Wrapper>\n  )\n}\n\nexport default Stacks\n","import Stacks from './Stacks'\n\nexport default Stacks\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport styled, { keyframes } from 'styled-components'\n\nimport Page from '../components/Page'\nimport Section from '../components/Section'\nimport Stacks from '../components/Stacks'\nimport Color from '../styles/colors'\n\nexport const query = graphql`\n  query Stacks {\n    allMdx(sort: {fields: frontmatter___order}) {\n      edges {\n        node {\n          body\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n\nconst handshake = keyframes`\n  0% {\n      transform:rotate(0deg)\n  }\n\n  4% {\n      transform:rotate(5deg)\n  }\n\n  8% {\n      transform:rotate(-5deg)\n  }\n\n  12% {\n      transform:rotate(5deg)\n  }\n\n  16% {\n      transform:rotate(-5deg)\n  }\n\n  20%, to {\n      transform:rotate(0deg)\n  }\n`\n\nconst Heading = styled.h1`\n  margin: 0;\n  font-size: 36px;\n  font-weight: 700;\n  line-height: 54px;\n  word-break: keep-all;\n`\n\nconst Hand = styled.span`\n  display: inline-block;\n  animation-duration: 2.5s;\n  animation-name: ${handshake};\n  animation-iteration-count: infinite;\n  animation-timing-function: ease-out;\n  transform-origin: center bottom;\n`\n\nconst Links = styled.div`\n  margin-top: 20px;\n`\n\nconst Link = styled.a`\n  color: ${Color.Gray7};\n  text-decoration: none;\n`\n\nconst Divider = styled.span`\n  color: ${Color.Gray6};\n  margin: 0 8px;\n`\n\nconst Career = styled.div`\n  display: flex;\n`\n\nconst Column = styled.div`\n  flex: 1;\n`\n\nconst CareerTitle = styled.h1`\n  margin: 0;\n  font-size: 24px;\n  line-height: 36px;\n`\n\nconst CompanyName = styled.b`\n  font-size: 20px;\n`\n\nconst Date = styled.span`\n  color: ${Color.Gray6};\n`\n\nfunction IndexPage({ data: { allMdx: { edges } } }) {\n  return (\n    <Page>\n      <Section>\n        <Heading>ÏïàÎÖïÌïòÏÑ∏Ïöî <Hand>üëã</Hand></Heading>\n        <Heading>ReactÎ•º Ï¢ãÏïÑÌïòÎäî ÌîÑÎ°†Ìä∏ÏóîÎìú Í∞úÎ∞úÏûê Ïù¥Ìïú ÏûÖÎãàÎã§</Heading>\n        <Heading>ÏïÑÌÇ§ÌÖçÏ≥ê, Ï°∞ÏßÅÎ¨∏ÌôîÏóê Í¥ÄÏã¨Ïù¥ ÎßéÏäµÎãàÎã§</Heading>\n\n        <Links>\n          <Link href=\"https://github.com/hahnlee\">GitHub</Link>\n          <Divider>|</Divider>\n\n          <Link href=\"https://blog.hanlee.io\">Blog</Link>\n          <Divider>|</Divider>\n\n          <Link href=\"/good-to-read\">Good To Read</Link>\n          <Divider>|</Divider>\n\n          <Link href=\"mailto:hanlee.dev@gmail.com\">hanlee.dev@gmail.com</Link>\n        </Links>\n      </Section>\n\n      <Section backgroundColor={Color.Gray0}>\n        <Career>\n          <Column>\n            <CareerTitle>Í≤ΩÎ†•</CareerTitle>\n            <p>\n              <CompanyName>ZOYI Corporation</CompanyName>\n              <Divider>|</Divider>\n              <Date>2018.11. - ÌòÑÏû¨</Date>\n            </p>\n            Ï±ÑÎÑêÌÜ° ÌîÑÎ°†Ìä∏ÏóîÎìú Î¶¨Îìú ÏóîÏßÄÎãàÏñ¥\n            <p>\n              <CompanyName>peoplefund</CompanyName>\n              <Divider>|</Divider>\n              <Date> 2017.04 - 2018.02</Date>\n            </p>\n            Î∞±ÏóîÎìú ÏóîÏßÄÎãàÏñ¥ Ïù∏ÌÑ¥\n          </Column>\n\n          <Column>\n            <CareerTitle>ÌïôÎ†•</CareerTitle>\n            <p>\n              <CompanyName>UNIST</CompanyName>\n              <Divider>|</Divider>\n              <Date>2015 - Ìú¥ÌïôÏ§ë</Date>\n            </p>\n            <p>Ïª¥Ìì®ÌÑ∞Í≥µÌïôÍ≥º ÌïôÏÇ¨Í≥ºÏ†ï</p>\n          </Column>\n        </Career>\n      </Section>\n\n      <Section title=\"Ïù¥Îü∞ Í∏∞Ïà†ÏùÄ ÌäπÌûà ÏûêÏã† ÏûàÏäµÎãàÎã§\">\n        <Stacks\n          items={edges.map(({ node: { body, frontmatter: { title } } }) => ({\n            body,\n            title,\n          }))}\n        />\n      </Section>\n\n      <Section title=\"Í∑∏Ïô∏ÏóêÎèÑ Ïù¥Îü∞ Í∏∞Ïà†ÏùÑ Îã§Î£∞Ïàò ÏûàÏäµÎãàÎã§\">\n        Git\n        CSS-in-JS\n        SCSS\n        Socket.io\n        Electron\n      </Section>\n\n      <Section title=\"Ïù¥Îü∞ Î∂ÑÏïºÎäî Í¥ÄÏã¨ ÏûàÏäµÎãàÎã§. ÌïòÏßÄÎßå Ïûò Îã§Î£®ÏßÄ Î™ªÌï©ÎãàÎã§\">\n        AB Test\n        GraphQL\n        Cypress\n        Prettier\n        Rust\n      </Section>\n    </Page>\n  )\n}\n\nexport default IndexPage\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n"],"sourceRoot":""}